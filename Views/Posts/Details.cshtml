@model JobFinder.Models.Post
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Details";
    var savedPosts = (List<SavedPost>)ViewData["SavedPosts"];
}

    <div class="w-100 d-flex justify-content-center">
        <div class="w-75">
            <div class="card my-4 @(Model.PostType == PostType.Offer ? "border-warning" : "border-success")">
                <div class="card-header text-primary @(Model.PostType == PostType.Offer ? "border-warning" : "border-success")"
                     style="display:flex; justify-content:space-between">

                    <h5>@@@Html.DisplayFor(modelItem => Model.User.UserName)</h5>
                    @if (SignInManager.IsSignedIn(User)) {
                        <div class="dropdown">
                            <a class="text-dark"
                               type="button"
                               id="dropdownMenuButton"
                               data-toggle="dropdown"
                               aria-haspopup="true"
                               aria-expanded="false"><i class="fas fa-ellipsis-h"></i></a>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                @{
                                    var sp = savedPosts.Where(x => x.UserId == UserManager.GetUserId(User) && x.PostId == Model.Id).FirstOrDefault();
                                    if (sp != null) {
                                        <a class="dropdown-item dropdown-item-text" asp-action="UnsavePost" asp-route-id="@Model.Id"><i class="fas fa-minus"></i> Unsave</a>
                                    } else {
                                        <a class="dropdown-item dropdown-item-text" asp-action="SavePost" asp-route-id="@Model.Id"><i class="fas fa-plus"></i> Save</a>
                                    }
                                }
                                @if (User.IsInRole("Admin")) {
                                    <div class="dropdown-divider"></div>
                                    if (Model.UserId == UserManager.GetUserId(User)) {
                                        <a asp-action="Edit" asp-route-id="@Model.Id" class="dropdown-item dropdown-item-text"><i class="fas fa-edit"></i> Edit</a>
                                    }
                                    <a asp-action="Delete" asp-route-id="@Model.Id" class="dropdown-item dropdown-item-text"><i class="fas fa-trash"></i> Delete</a>
                                }
                            </div>
                        </div>
                    }
                </div>
                <div class="card-body">
                    <div class="text-muted mb-2" style="font-size:0.8rem">@Model.DatePosted.ToString("dd MMM yyyy H:mm")</div>
                    <h5 class="card-title text-primary font-weight-bold">@Html.DisplayFor(modelItem => Model.Title)</h5>
                    <p class="card-text" style="white-space: pre-line">@Html.DisplayFor(modelItem => Model.Content)</p>
                </div>
                <div class="card-footer py-1 d-flex justify-content-between @(Model.PostType == PostType.Offer ? "border-warning" : "border-success")">
                    <p class="card-text m-0 font-weight-bold @(Model.PostType == PostType.Offer ? "text-warning" : "text-success")">@Model.PostType</p>

                </div>
            </div>
            <a asp-action="Index" class="btn btn-primary"><i class="fas fa-arrow-left"></i> Back to Newsfeed</a>
        </div>
    </div>