@model IEnumerable<JobFinder.Models.Post>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
    var savedPosts = (List<SavedPost>)ViewData["SavedPosts"];
}

<div class="container w-75">

    <a href="@Url.Action("Create")" class="btn btn-success mt-3"><i class="fas fa-pen"></i> Create Post</a>

    @foreach (var post in Model.Reverse()) {
        <div class="card my-5 @(post.PostType == PostType.Offer? "border-warning" : "border-info")">
            <div class="card-header text-primary @(post.PostType == PostType.Offer? "border-warning" : "border-info")"
                 style="display:flex; justify-content:space-between">

                <h5>@@@Html.DisplayFor(modelItem => post.User.UserName)</h5>
                @if(post.UserId == UserManager.GetUserId(User)) {
                    <div class="dropdown">
                        <a class="text-dark" 
                           type="button"
                           id="dropdownMenuButton" 
                           data-toggle="dropdown" 
                           aria-haspopup="true" 
                           aria-expanded="false"><i class="fas fa-ellipsis-h"></i></a>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <a asp-action="Edit" asp-route-id="@post.Id" class="dropdown-item text-info bg-white"><i class="fas fa-edit"></i> Edit</a>
                            <a asp-action="Delete" asp-route-id="@post.Id" class="dropdown-item text-danger bg-white"><i class="fas fa-trash"></i> Delete</a>
                        </div>
                    </div>     
                    
                }
            </div>
            <div class="card-body">
                <div class="text-muted mb-2" style="font-size:0.8rem">@post.DatePosted.ToString("dd MMM yyyy H:mm")</div>
                <h5 class="card-title text-primary font-weight-bold">@Html.DisplayFor(modelItem => post.Title)</h5>
                <p class="card-text">@Html.DisplayFor(modelItem => post.Content)</p>
            </div>
            <div class="card-footer py-1 d-flex justify-content-between @(post.PostType == PostType.Offer? "border-warning" : "border-info")">
                <p class="card-text m-0 font-weight-bold @(post.PostType == PostType.Offer? "text-warning" : "text-info")">@post.PostType</p>
                @if (SignInManager.IsSignedIn(User)) {
                    var sp = savedPosts.Where(x=> x.UserId == UserManager.GetUserId(User) && x.PostId == post.Id).FirstOrDefault();
                    if (sp != null) {
                        <a class="text-dark text-decoration-none font-weight-bold" asp-action="UnsavePost" asp-route-id="@post.Id">Unsave <i class="fas fa-minus"></i></a>
                    } else {
                        <a class="text-success text-decoration-none font-weight-bold" asp-action="SavePost" asp-route-id="@post.Id">Save <i class="fas fa-plus"></i></a>
                    }
                }
            </div>
        </div>
    }
</div>

