@model PaginatedList<JobFinder.Models.SavedPost>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "SavedPosts";
}

@if (Model.Count() == 0) {
    <div class="my-5 d-flex justify-content-around">
        <div class="d-flex flex-column justify-content-center align-content-center">
            <img src="~/images/no-posts.svg" style="width: 450px" />
            <h4 class="text-center mt-3 font-weight-bold" style="color:#444053">There are no posts to show.</h4>
        </div>

    </div>
} else {

    <div class="container w-100 d-flex flex-column align-items-center">
        <nav aria-label="breadcrumb" class="w-75 mt-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item active" aria-current="page">My Posts</li>
            </ol>
        </nav>
        @foreach (var savedPost in Model) {
            if (savedPost.UserId == UserManager.GetUserId(User)) {
                <div class="card w-75 my-4 @(savedPost.Post.PostType == PostType.Offer ? "border-warning" : "border-success")">
                    <div class="card-header text-primary @(savedPost.Post.PostType == PostType.Offer ? "border-warning" : "border-success")"
                         style="display:flex; justify-content:space-between">

                        <h5>@@@(savedPost.Post.User.UserName)</h5>
                        <a class="text-secondary text-decoration-none font-weight-bold"
                           data-toggle="tooltip"
                           data-placement="bottom"
                           title="Unsave"
                           asp-action="UnsavePost"
                           asp-route-id="@savedPost.PostId">
                            <i class="fas fa-times"></i>
                        </a>
                    </div>
                    <div class="card-body">
                        <div class="text-muted mb-2" style="font-size:0.8rem">@savedPost.Post.DatePosted.ToString("dd MMM yyyy H:mm")</div>
                        <h5 class="card-title text-primary font-weight-bold">@Html.DisplayFor(modelItem => savedPost.Post.Title)</h5>
                        <p class="card-text">@Html.DisplayFor(modelItem => savedPost.Post.Content)</p>
                    </div>
                    <div class="card-footer py-1 d-flex justify-content-between @(savedPost.Post.PostType == PostType.Offer ? "border-warning" : "border-success")">
                        <p class="card-text m-0 font-weight-bold @(savedPost.Post.PostType == PostType.Offer ? "text-warning" : "text-success")">@savedPost.Post.PostType</p>
                    </div>
                </div>
            }
        }
        @{
            var prevDisabled = (!(Model.HasPreviousPage) ? "disabled" : "");
            var nextDisabled = (!(Model.HasNextPage) ? "disabled" : "");
        }
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item  @prevDisabled"><a class="page-link" asp-action="ListSaved" asp-route-pageIndex="@(Model.PageIndex - 1)">Previous</a></li>
                @for (int i = 1; i <= Model.TotalPages; i++) {
                    if (Model.PageIndex == i) {
                        <li class="page-item active"><a class="page-link" asp-action="ListSaved" asp-route-pageIndex="@(i)">@i</a></li>
                    } else {
                        <li class="page-item"><a class="page-link" asp-action="ListSaved" asp-route-pageIndex="@(i)">@i</a></li>
                    }
                }
                <li class="page-item  @nextDisabled"><a class="page-link" asp-action="ListSaved" asp-route-pageIndex="@(Model.PageIndex + 1)">Next</a></li>
            </ul>
        </nav>
    </div>
}
