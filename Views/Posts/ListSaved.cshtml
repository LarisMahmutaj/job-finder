@model IEnumerable<JobFinder.Models.SavedPost>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "SavedPosts";
}

<div class="container w-75">
    @foreach (var savedPost in Model.Reverse()) {
        if (savedPost.UserId == UserManager.GetUserId(User)) {
        <div class="card my-5 @(savedPost.Post.PostType == PostType.Offer ? "border-warning" : "border-info")">
            <div class="card-header text-primary @(savedPost.Post.PostType == PostType.Offer ? "border-warning" : "border-info")"
                 style="display:flex; justify-content:space-between">

                <h5>@@@(savedPost.Post.User.UserName)</h5>

                <div>
                    <a asp-action="Edit" asp-route-id="@savedPost.Post.Id" class="btn btn-info btn-sm"><i class="fas fa-edit"></i> Edit</a>
                    <a asp-action="Delete" asp-route-id="@savedPost.Post.Id" class="btn btn-danger btn-sm"><i class="fas fa-trash"></i> Delete</a>
                </div>
            </div>
            <div class="card-body">
                <div class="text-muted mb-2" style="font-size:0.8rem">@savedPost.Post.DatePosted.ToString("dd MMM yyyy H:mm")</div>
                <h5 class="card-title text-primary font-weight-bold">@Html.DisplayFor(modelItem => savedPost.Post.Title)</h5>
                <p class="card-text">@Html.DisplayFor(modelItem => savedPost.Post.Content)</p>
            </div>
            <div class="card-footer d-flex justify-content-between @(savedPost.Post.PostType == PostType.Offer ? "border-warning" : "border-info")">
                <a class="text-secondary text-decoration-none font-weight-bold" asp-action="UnsavePost" asp-route-id="@savedPost.PostId">Unsave <i class="fas fa-minus"></i></a>
                <p class="card-text font-weight-bold @(savedPost.Post.PostType == PostType.Offer ? "text-warning" : "text-info")">@savedPost.Post.PostType</p>
            </div>
        </div>
        }
    }
</div>

