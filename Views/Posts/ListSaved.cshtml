@model PaginatedList<JobFinder.Models.SavedPost>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "SavedPosts";
}

    <div class="container w-100 d-flex flex-column align-items-center">
        @foreach (var savedPost in Model) {
            if (savedPost.UserId == UserManager.GetUserId(User)) {
                <div class="card w-75 my-5 @(savedPost.Post.PostType == PostType.Offer ? "border-warning" : "border-success")">
                    <div class="card-header text-primary @(savedPost.Post.PostType == PostType.Offer ? "border-warning" : "border-success")"
                         style="display:flex; justify-content:space-between">

                        <h5>@@@(savedPost.Post.User.UserName)</h5>
                        <a class="text-secondary text-decoration-none font-weight-bold"
                           data-toggle="tooltip"
                           data-placement="bottom"
                           title="Unsave"
                           asp-action="UnsavePost"
                           asp-route-id="@savedPost.PostId">
                            <i class="fas fa-times"></i>
                        </a>
                    </div>
                    <div class="card-body">
                        <div class="text-muted mb-2" style="font-size:0.8rem">@savedPost.Post.DatePosted.ToString("dd MMM yyyy H:mm")</div>
                        <h5 class="card-title text-primary font-weight-bold">@Html.DisplayFor(modelItem => savedPost.Post.Title)</h5>
                        <p class="card-text">@Html.DisplayFor(modelItem => savedPost.Post.Content)</p>
                    </div>
                    <div class="card-footer py-1 d-flex justify-content-between @(savedPost.Post.PostType == PostType.Offer ? "border-warning" : "border-success")">
                        <p class="card-text m-0 font-weight-bold @(savedPost.Post.PostType == PostType.Offer ? "text-warning" : "text-success")">@savedPost.Post.PostType</p>
                    </div>
                </div>
            }
        }
        @{
            var prevDisabled = (!(Model.HasPreviousPage) ? "disabled" : "");
            var nextDisabled = (!(Model.HasNextPage) ? "disabled" : "");
        }
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item  @prevDisabled"><a class="page-link" asp-action="ListSaved" asp-route-pageIndex="@(Model.PageIndex - 1)">Previous</a></li>
                @*@for (int i = 0; i < pagesNumber; i++) {
                    @if (PageIndex == i+1) {
                        <li class="page-item active"><a class="page-link " href="#">@(i + 1)</a></li>
                    } else {
                        <li class="page-item"><a class="page-link" href="#">@(i + 1)</a></li>
                    }
                }*@
                <li class="page-item  @nextDisabled"><a class="page-link" asp-action="ListSaved" asp-route-pageIndex="@(Model.PageIndex + 1)">Next</a></li>
            </ul>
        </nav>
    </div>

