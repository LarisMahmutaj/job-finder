@model PaginatedList<JobFinder.Models.Post>
@using Microsoft.AspNetCore.Identity
@{
    ViewData["Title"] = "MyPosts";
    var savedPosts = (List<SavedPost>)ViewData["SavedPosts"];
}
@inject UserManager<IdentityUser> UserManager



@if (Model.Count() == 0) {
    <div class="my-5 d-flex justify-content-around">
        <div class="d-flex flex-column justify-content-center align-content-center">
            <img src="~/images/no-posts.svg" style="width: 450px" />
            <h4 class="text-center mt-3 font-weight-bold" style="color:#444053">There are no posts to show.</h4>
        </div>

    </div>
} else {
<div class="container w-100 d-flex flex-column align-items-center">
    <nav aria-label="breadcrumb" class="w-75 mt-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item active" aria-current="page">My Posts</li>
        </ol>
    </nav>
    @foreach (var post in Model) {
        <div class="card w-75 my-4 @(post.PostType == PostType.Offer ? "border-warning" : "border-success")">
            <div class="card-header text-primary @(post.PostType == PostType.Offer ? "border-warning" : "border-success")"
                 style="display:flex; justify-content:space-between">

                <h5>@@@Html.DisplayFor(modelItem => post.User.UserName)</h5>
                @if (post.UserId == UserManager.GetUserId(User)) {
                    <div class="dropdown">
                        <a class="text-dark"
                           type="button"
                           id="dropdownMenuButton"
                           data-toggle="dropdown"
                           aria-haspopup="true"
                           aria-expanded="false"><i class="fas fa-ellipsis-h"></i></a>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <a asp-action="Edit" asp-route-id="@post.Id" class="dropdown-item dropdown-item-text"><i class="fas fa-edit"></i> Edit</a>
                            <a asp-action="Delete" asp-route-id="@post.Id" class="dropdown-item dropdown-item-text"><i class="fas fa-trash"></i> Delete</a>
                        </div>
                    </div>

                }
            </div>
            <div class="card-body">
                <div class="text-muted mb-2" style="font-size:0.8rem">@post.DatePosted.ToString("dd MMM yyyy H:mm")</div>
                <h5 class="card-title text-primary font-weight-bold">@Html.DisplayFor(modelItem => post.Title)</h5>
                <p class="card-text">@Html.DisplayFor(modelItem => post.Content)</p>
            </div>
            <div class="card-footer py-1 d-flex justify-content-between @(post.PostType == PostType.Offer ? "border-warning" : "border-success")">
                <p class="card-text m-0 font-weight-bold @(post.PostType == PostType.Offer ? "text-warning" : "text-success")">@post.PostType</p>
            </div>
        </div>
    }
    @{
        var prevDisabled = (!(Model.HasPreviousPage) ? "disabled" : "");
        var nextDisabled = (!(Model.HasNextPage) ? "disabled" : "");
    }
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item  @prevDisabled"><a class="page-link" asp-action="MyPosts" asp-route-pageIndex="@(Model.PageIndex - 1)"><i class="fas fa-chevron-left"></i> Previous</a></li>
            @for (int i = 1; i <= Model.TotalPages; i++) {
                if (Model.PageIndex == i) {
                    <li class="page-item active"><a class="page-link" asp-action="MyPosts" asp-route-pageIndex="@(i)">@i</a></li>
                } else {
                    <li class="page-item"><a class="page-link" asp-action="MyPosts" asp-route-pageIndex="@(i)">@i</a></li>
                }
            }
            <li class="page-item  @nextDisabled"><a class="page-link" asp-action="MyPosts" asp-route-pageIndex="@(Model.PageIndex + 1)">Next <i class="fas fa-chevron-right"></i></a></li>
        </ul>
    </nav>
</div>
}